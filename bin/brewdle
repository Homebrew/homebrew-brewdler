#!/usr/bin/env ruby

require 'brewdler'
require 'commander/import'

program :version, Brewdler::VERSION
program :description, 'CLI helper for brewdler'

default_command :install

command :install do |c|
  c.description = 'Install all homebrew based dependecies'
  c.action do |args, options|

    begin
      dependencies = File.open(File.join(Dir.pwd, 'Brewfile')).find_all { |line|
        line.chomp!
        line.length > 0 && !comment?(line)
      }
    rescue
      puts 'No Brewfile found'
    end

    missing_formulae = dependencies.find_all { |dependency|
      !formula_exists?(dependency)
    }

    if missing_formulae.empty?
      dependencies.each do |dependency|
        if installed?(dependency)
          puts "Using #{dependency} (#{installed_version(dependency)})"
        else
          puts "Installing #{dependency} (#{formula_version(dependency)})"
          install(dependency)
        end
      end
      puts "All dependencies installed"
    else
      puts "Non-existent formula/e: #{missing_formulae.join(', ')}"
      puts "(please check spelling in Brewfile, and/or run 'brew update')"
    end

  end
end

def install(name)
  brewable = `brew info #{name}`
  if brewable[0..4] != 'Error'
    system "brew install #{name}"
  else
    puts "Error: No available formula for #{name}"
  end
end

def formula_exists?(name)
  formula_location = File.join(`brew --prefix`.chomp, 'Library', 'Formula', name + ".rb")
  File.exists? formula_location
end

def installed?(name)
  installed_version = `brew list --versions #{name}`.chomp
  !installed_version.empty?
end

def installed_version(name)
  installed_version = `brew list --versions #{name}`.chomp
  installed_version.match(/#{name} ([^\s]+)/)[1]
end

def formula_version(name)
  formula_version = `brew info #{name}`
  formula_version.split($/).first.match(/#{name}: stable ([^\s,]+)/)[1]
end

def comment?(line)
  line =~ /^ *#/
end
